name: MaskFS Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        target:
          - { os: ubuntu-latest, target: i686-unknown-linux-gnu, artifact: libgm_maskfs.so }
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu, artifact: libgm_maskfs.so }
          - { os: windows-latest, target: i686-pc-windows-msvc, artifact: gm_maskfs.dll }
          - { os: windows-latest, target: x86_64-pc-windows-msvc, artifact: gm_maskfs.dll }
        include:
          - { os: ubuntu-latest, target: i686-unknown-linux-gnu, artifact: libgm_maskfs.so, name: gmsv_gm_maskfs_linux.dll }
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu, artifact: libgm_maskfs.so, name: gmsv_gm_maskfs_linux64.dll }
          - { os: windows-latest, target: i686-pc-windows-msvc, artifact: gm_maskfs.dll, name: gmsv_gm_maskfs_win32.dll }
          - { os: windows-latest, target: x86_64-pc-windows-msvc, artifact: gm_maskfs.dll, name: gmsv_gm_maskfs_win64.dll }
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        run: |
          rustup install nightly
          rustup default nightly
          rustup target add ${{ matrix.target.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target.target }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.target.target }}/release/${{ matrix.target.artifact }}
          tag_name: ${{ github.ref }}
          name: ${{ matrix.target.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}